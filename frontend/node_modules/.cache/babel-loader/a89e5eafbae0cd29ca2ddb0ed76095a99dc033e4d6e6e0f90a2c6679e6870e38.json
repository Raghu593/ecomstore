{"ast":null,"code":"var _jsxFileName = \"/Users/raghu/Downloads/ecomstore-master/frontend/src/screens/PaymentScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport { useNavigate } from 'react-router-dom';\nimport CheckoutSteps from '../components/CheckoutSteps';\n// import { saveShippingAddress } from '../actions/cartActions'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { savePaymentMethod } from '../app/features/slices/cartslice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PaymentScreen() {\n  _s();\n  const navigate = useNavigate();\n  const shippingAddress = useSelector(state => state.cart.shippingAdress);\n  if (!shippingAddress) {\n    navigate('/shipping');\n  }\n  const [paymentMethod, setPaymentMethod] = useState('RazorPay');\n  const dispatch = useDispatch();\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    navigate('/placeorder');\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select Payment Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          as: \"legend\",\n          children: \"Select Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Upi or Credit Card\",\n            id: \"PayPal\",\n            name: \"paymentMethod\",\n            value: \"PayPal\",\n            checked: true,\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(PaymentScreen, \"FZNicbwtrWpbQuzp2KQTW6+KdKk=\", false, function () {\n  return [useNavigate, useSelector, useDispatch];\n});\n_c = PaymentScreen;\nexport default PaymentScreen;\nvar _c;\n$RefreshReg$(_c, \"PaymentScreen\");","map":{"version":3,"names":["React","useState","Form","Button","Col","FormContainer","useNavigate","CheckoutSteps","useDispatch","useSelector","savePaymentMethod","jsxDEV","_jsxDEV","PaymentScreen","_s","navigate","shippingAddress","state","cart","shippingAdress","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","step1","step2","step3","onSubmit","Group","Label","as","Check","type","label","id","name","value","checked","onChange","target","variant","_c","$RefreshReg$"],"sources":["/Users/raghu/Downloads/ecomstore-master/frontend/src/screens/PaymentScreen.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button ,Col} from 'react-bootstrap'\nimport FormContainer from '../components/FormContainer'\nimport { useNavigate } from 'react-router-dom';\nimport CheckoutSteps from '../components/CheckoutSteps'\n// import { saveShippingAddress } from '../actions/cartActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { savePaymentMethod } from '../app/features/slices/cartslice';\n\nfunction PaymentScreen() {\n    const navigate = useNavigate();\n    const shippingAddress=useSelector((state)=>state.cart.shippingAdress);\n    if(!shippingAddress){\n        navigate('/shipping')\n    }\n    const [paymentMethod, setPaymentMethod] = useState('RazorPay')\n  \n    const dispatch=useDispatch();\n\n    const submitHandler=(e)=>{\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n            navigate('/placeorder')\n        }\n    \n  return (\n    <FormContainer><h1>Select Payment Method</h1>\n    <CheckoutSteps step1 step2 step3/>\n    <Form onSubmit={submitHandler}>\n    <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='Upi or Credit Card'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n            {/* <Form.Check\n              type='radio'\n              label='Stripe'\n              id='Stripe'\n              name='paymentMethod'\n              value='Stripe'\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check> */}\n          </Col>\n        </Form.Group>\n      <Button type='submit' variant='primary'>\n        Continue\n      </Button>\n    </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,MAAM,EAAEC,GAAG,QAAO,iBAAiB;AAClD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,aAAa,MAAM,6BAA6B;AACvD;AACA,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,iBAAiB,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,eAAe,GAACP,WAAW,CAAEQ,KAAK,IAAGA,KAAK,CAACC,IAAI,CAACC,cAAc,CAAC;EACrE,IAAG,CAACH,eAAe,EAAC;IAChBD,QAAQ,CAAC,WAAW,CAAC;EACzB;EACA,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,UAAU,CAAC;EAE9D,MAAMqB,QAAQ,GAACd,WAAW,CAAC,CAAC;EAE5B,MAAMe,aAAa,GAAEC,CAAC,IAAG;IACrBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,QAAQ,CAACZ,iBAAiB,CAACU,aAAa,CAAC,CAAC;IACtCL,QAAQ,CAAC,aAAa,CAAC;EAC3B,CAAC;EAEP,oBACEH,OAAA,CAACP,aAAa;IAAAqB,QAAA,gBAACd,OAAA;MAAAc,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7ClB,OAAA,CAACL,aAAa;MAACwB,KAAK;MAACC,KAAK;MAACC,KAAK;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClClB,OAAA,CAACV,IAAI;MAACgC,QAAQ,EAAEX,aAAc;MAAAG,QAAA,gBAC9Bd,OAAA,CAACV,IAAI,CAACiC,KAAK;QAAAT,QAAA,gBACLd,OAAA,CAACV,IAAI,CAACkC,KAAK;UAACC,EAAE,EAAC,QAAQ;UAAAX,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAClDlB,OAAA,CAACR,GAAG;UAAAsB,QAAA,eACFd,OAAA,CAACV,IAAI,CAACoC,KAAK;YACTC,IAAI,EAAC,OAAO;YACZC,KAAK,EAAC,oBAAoB;YAC1BC,EAAE,EAAC,QAAQ;YACXC,IAAI,EAAC,eAAe;YACpBC,KAAK,EAAC,QAAQ;YACdC,OAAO;YACPC,QAAQ,EAAGrB,CAAC,IAAKH,gBAAgB,CAACG,CAAC,CAACsB,MAAM,CAACH,KAAK;UAAE;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACflB,OAAA,CAACT,MAAM;QAACoC,IAAI,EAAC,QAAQ;QAACQ,OAAO,EAAC,SAAS;QAAArB,QAAA,EAAC;MAExC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEpB;AAAChB,EAAA,CAhDQD,aAAa;EAAA,QACDP,WAAW,EACNG,WAAW,EAMlBD,WAAW;AAAA;AAAAwC,EAAA,GARrBnC,aAAa;AAkDtB,eAAeA,aAAa;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}