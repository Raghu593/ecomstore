{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { useGetMyOrdersQuery } from \"../../api\";\nconst initialState = {\n  cartItems: [],\n  totalQuantity: 0,\n  totalCartValue: 0,\n  shippingAddress: {},\n  paymentMethod: []\n};\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      // console.log(\"payload\",action.payload)\n      const newItem = action.payload;\n      const existingItem = state.cartItems.find(item => item.product === newItem.product);\n      if (existingItem) {\n        existingItem.qty = newItem.qty;\n        existingItem.itemsmultiliedbyqty = newItem.qty * newItem.price;\n        state.totalCartValue = 0;\n        state.cartItems.map(item => {\n          state.totalCartValue = item.itemsmultiliedbyqty + state.totalCartValue;\n        });\n      } else {\n        newItem.itemsmultiliedbyqty = newItem.qty * newItem.price;\n        state.cartItems.push(newItem);\n        state.totalQuantity = state.cartItems.length;\n        state.totalCartValue = 0;\n        state.cartItems.map(item => {\n          state.totalCartValue = item.itemsmultiliedbyqty + state.totalCartValue;\n        });\n      }\n      // localStorage.setItem('cartItems',JSON.stringify(state.cartItems))\n    },\n\n    removeFromCart: (state, action) => {\n      const deleteItem = action.payload;\n      // console.log(\"delitem\",deleteItem)\n      // console.log(state.cartItems)\n      const findItem = state.cartItems.find(item => item.product === deleteItem.id);\n      // console.warn(\"found\",findItem)\n      if (findItem) {\n        state.cartItems = state.cartItems.filter(item => item.product !== deleteItem.id);\n        state.totalQuantity = state.cartItems.length;\n        //  console.warn(\"Tobeminus\",state.totalCartValue)\n        state.totalCartValue = state.totalCartValue - deleteItem.cal;\n        //  localStorage.setItem('cartItems',JSON.stringify(state.cartItems))\n      }\n      // state.cartItems.map((item)=>{\n      //     // state.totalCartValue=0\n      //     state.totalCartValue=state.totalCartValue-item.itemsmultiliedbyqty;\n      //     // console.log(total)\n      // })\n    },\n\n    resetCart: (state, action) => {\n      state.cartItems = [];\n      state.totalQuantity = 0;\n      state.totalCartValue = 0;\n      state.shippingAddress = {};\n      state.paymentMethod = [];\n    },\n    saveShippingAddress: (state, action) => {\n      state.shippingAddress = action.payload;\n    },\n    savePaymentMethod: (state, action) => {\n      state.paymentMethod = action.payload;\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  saveShippingAddress,\n  savePaymentMethod,\n  resetCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","useGetMyOrdersQuery","initialState","cartItems","totalQuantity","totalCartValue","shippingAddress","paymentMethod","cartSlice","name","reducers","addToCart","state","action","newItem","payload","existingItem","find","item","product","qty","itemsmultiliedbyqty","price","map","push","length","removeFromCart","deleteItem","findItem","id","filter","cal","resetCart","saveShippingAddress","savePaymentMethod","actions","reducer"],"sources":["/Users/raghu/Downloads/ecomstore-master/frontend/src/app/features/slices/cartslice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { useGetMyOrdersQuery } from \"../../api\";\n\nconst initialState={\n    cartItems:[],\n    totalQuantity:0,\n    totalCartValue:0,\n    shippingAddress:{},\n    paymentMethod:[]\n}\n\nexport const cartSlice=createSlice({\n    name:'cart',\n    initialState,\n    reducers:{\n        addToCart:(state,action)=>{\n            // console.log(\"payload\",action.payload)\n            const newItem=action.payload;\n            const existingItem=state.cartItems.find((item)=>item.product === newItem.product)\n                    if(existingItem){\n                    existingItem.qty=newItem.qty;\n                    existingItem.itemsmultiliedbyqty=newItem.qty*newItem.price\n                    state.totalCartValue=0\n                        state.cartItems.map((item)=>{\n                            state.totalCartValue=item.itemsmultiliedbyqty+state.totalCartValue\n                        })\n                }\n                    else{\n                        newItem.itemsmultiliedbyqty=newItem.qty*newItem.price\n                        state.cartItems.push(newItem);\n                        state.totalQuantity=state.cartItems.length\n                        state.totalCartValue=0\n                        state.cartItems.map((item)=>{\n                            state.totalCartValue=item.itemsmultiliedbyqty+state.totalCartValue\n                        })\n                    }   \n                    // localStorage.setItem('cartItems',JSON.stringify(state.cartItems))\n        }, \n        removeFromCart:(state,action)=>{\n            const deleteItem=action.payload;\n            // console.log(\"delitem\",deleteItem)\n            // console.log(state.cartItems)\n            const findItem=state.cartItems.find((item)=>item.product === deleteItem.id)\n            // console.warn(\"found\",findItem)\n            if(findItem){\n                 state.cartItems = state.cartItems.filter(item => item.product !== deleteItem.id); \n                 state.totalQuantity=state.cartItems.length   \n                //  console.warn(\"Tobeminus\",state.totalCartValue)\n                 state.totalCartValue=state.totalCartValue-deleteItem.cal;\n                //  localStorage.setItem('cartItems',JSON.stringify(state.cartItems))\n            }\n            // state.cartItems.map((item)=>{\n            //     // state.totalCartValue=0\n            //     state.totalCartValue=state.totalCartValue-item.itemsmultiliedbyqty;\n            //     // console.log(total)\n            // })\n        },\n        resetCart:(state,action)=>{\n            state.cartItems=[]\n            state.totalQuantity=0\n            state.totalCartValue=0\n            state.shippingAddress={}\n            state.paymentMethod=[]\n        },\n        saveShippingAddress:(state,action)=>{\n            state.shippingAddress=action.payload\n        },\n        savePaymentMethod:(state,action)=>{\n            state.paymentMethod=action.payload\n        }\n        } \n})\n\nexport const { addToCart, removeFromCart,saveShippingAddress,savePaymentMethod,resetCart} = cartSlice.actions;\n\nexport default cartSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}