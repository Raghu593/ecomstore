{"ast":null,"code":"var _jsxFileName = \"/Users/raghu/Downloads/ecomstore-master/frontend/src/screens/UserEditScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from './Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { useGetUserByIdQuery, useUpdateUserByIdMutation } from '../app/api';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { skipToken } from '@reduxjs/toolkit/dist/query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserEditScreen = () => {\n  _s();\n  const params = useParams();\n  let id = params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [skip, setskip] = useState(true);\n  const navigate = useNavigate();\n  const submitHandler = async e => {\n    e.preventDefault();\n    const formData = {\n      name,\n      email,\n      id,\n      isAdmin\n    };\n    // console.log(formData)\n    await updateUser(formData);\n  };\n  const {\n    data,\n    isLoading,\n    isFetching,\n    error,\n    isError,\n    isSuccess,\n    refetch\n  } = useGetUserByIdQuery(id, {\n    skip\n  });\n  const [updateUser, updateUserResponse] = useUpdateUserByIdMutation();\n\n  //  console.log(updateUserResponse.isSuccess)\n\n  useEffect(() => {\n    setskip(false);\n    if (isSuccess) {\n      setName(data.name);\n      setEmail(data.email);\n      setIsAdmin(data.isAdmin);\n    }\n    // if(updateUserResponse.isSuccess){\n    //   // setskip(true)\n    //   // refetch()      \n    //   navigate('/admin/userlist')\n    // }\n  }, [isSuccess]);\n\n  // const {data,isLoading,error}=useGetProfileQuery();\n  //  const [getUser,getUserResponse]=useGetUserByIdQuery();\n  //  console.log(getUser)\n\n  // if(isSuccess){\n  //       console.log(\"data\",data)\n  //  }\n\n  let userInfo;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin/userlist\",\n        className: \"btn btn-light my-3\",\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"name\",\n              placeholder: \"Enter name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"isadmin\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              label: \"Is Admin\",\n              checked: isAdmin,\n              onChange: e => setIsAdmin(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            onClick: submitHandler,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n_s(UserEditScreen, \"++Twync4vmp3Z+rcVpgSpGTJ2xI=\", false, function () {\n  return [useParams, useNavigate, useGetUserByIdQuery, useUpdateUserByIdMutation];\n});\n_c = UserEditScreen;\nexport default UserEditScreen;\nvar _c;\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","useGetUserByIdQuery","useUpdateUserByIdMutation","useNavigate","useParams","skipToken","jsxDEV","_jsxDEV","Fragment","_Fragment","UserEditScreen","_s","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","skip","setskip","navigate","submitHandler","e","preventDefault","formData","updateUser","data","isLoading","isFetching","error","isError","isSuccess","refetch","updateUserResponse","userInfo","children","to","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","Check","label","checked","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/raghu/Downloads/ecomstore-master/frontend/src/screens/UserEditScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from './Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { useGetUserByIdQuery,useUpdateUserByIdMutation } from '../app/api'\nimport { useNavigate ,useParams} from 'react-router-dom';\nimport { skipToken } from '@reduxjs/toolkit/dist/query'\n\n\nconst UserEditScreen = () => {\n\n  const params=useParams();\n  let id=params.id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n  const [skip, setskip] = useState(true)\n\n  const navigate = useNavigate();\n\n  const submitHandler = async (e) => {\n    e.preventDefault()\n    const formData={name,email,id,isAdmin}\n    // console.log(formData)\n    await updateUser(formData);\n    }\n\n\n  const {data,isLoading,isFetching,error,isError,isSuccess,refetch}=useGetUserByIdQuery(id,{\n    skip,\n  });\n  const [updateUser,updateUserResponse]=useUpdateUserByIdMutation();\n\n//  console.log(updateUserResponse.isSuccess)\n\n  useEffect(() => {\n    setskip(false)\n    if(isSuccess){\n      setName(data.name)\n      setEmail(data.email)\n      setIsAdmin(data.isAdmin)\n    }\n    // if(updateUserResponse.isSuccess){\n    //   // setskip(true)\n    //   // refetch()      \n    //   navigate('/admin/userlist')\n    // }\n  }, [isSuccess])\n\n\n  // const {data,isLoading,error}=useGetProfileQuery();\n    //  const [getUser,getUserResponse]=useGetUserByIdQuery();\n  //  console.log(getUser)\n\n// if(isSuccess){\n//       console.log(\"data\",data)\n//  }\n   \n    let userInfo;\n  \n\n\n\n  return (\n    <>\n     {/* {error && <Message variant='danger'>{error}</Message>} */}\n      {/* <Message>Hello</Message> */}\n      {/* {isLoading && <Loader />} */}\n      {/* {isSuccess &&  */}\n      <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {/* {isLoading && <Loader />} */}\n        {/* {error && <Message variant='danger'>{error}</Message>} */}\n        {/* {isLoading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error.data}</Message>\n        ) : ( */}\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary' onClick={submitHandler}>\n              Update\n            </Button>\n          </Form>\n        {/* )} */}\n      </FormContainer>\n      </>\n{/* } */}\n    </>\n  )\n}\n\nexport default UserEditScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}